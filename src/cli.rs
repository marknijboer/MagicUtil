use clap::{Arg, App, SubCommand, ArgMatches};

/// Matches the CLI arguments and returns an object containing the values.
pub fn match_cli_arguments() -> ArgMatches<'static> {
    App::new("MagicINFO Util")
        .version("1.0")
        .about("Useful utilities on a MagicINFO server")
        .subcommand(SubCommand::with_name("system")
            .about("Utilities based on the system itself")
            .subcommand(SubCommand::with_name("macaddress")
                .about("Returns the system's MAC address"))
            .subcommand(SubCommand::with_name("boardid")
                .about("Returns the system's board ID"))
            .subcommand(SubCommand::with_name("hwunique")
                .about("Returns the system's hardware unique"))
        )
        .subcommand(SubCommand::with_name("config")
            .about("Returns one or more configuration properties")
            .arg(Arg::with_name("PROPERTY")
                .multiple(true)
                .required(true)
                .takes_value(true)
            )
        )
        .subcommand(SubCommand::with_name("open")
            .about("Tries to open the given file")
            .arg(Arg::with_name("FILE")
                .required(true)
                .takes_value(true)
            )
        )
        .subcommand(SubCommand::with_name("tail")
            .about("Tries to tail and follow the given file")
            .arg(Arg::with_name("FILE")
                .required(true)
                .takes_value(true)
            )
        )
        .get_matches()
}